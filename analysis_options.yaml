# Defines a set of analysis options to encourage good coding practices in a Flutter project using MVVM and GetX.

# Include the standard set of lint rules recommended by the Flutter team.
include: package:flutter_lints/flutter.yaml

analyzer:
  # Enable additional strict checks.
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false

  # Exclude files that are generated or that you don't want to analyze.
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gr.dart"

  # Customize errors, warnings, and information level issues.
  errors:
    # Treat missing required parameters as errors.
    missing_required_param: error
    # Treat deprecated member usage as a warning.
    deprecated_member_use: warning
    todo: ignore

linter:
  rules:
    # General best practices.
    avoid_print: true
    prefer_const_constructors: true
    prefer_final_fields: true
    prefer_null_aware_operators: true
    avoid_relative_lib_imports: true

    # Error handling best practices.
    avoid_catching_errors: true
    avoid_returning_null_for_void: true

    # Code readability.
    always_declare_return_types: true
    annotate_overrides: true
    prefer_typing_uninitialized_variables: true

    # Performance optimizations.
    avoid_redundant_argument_values: true
    prefer_collection_literals: true

    # UI and design best practices.
    avoid_unnecessary_containers: true
    prefer_const_literals_to_create_immutables: true

    # GetX specific rules.
    avoid_classes_with_only_static_members: true

# For more information on configuring analysis options, see:
# https://dart.dev/guides/language/analysis-options
